import 'package:isms/models/admin_models/user_summary.dart';
import 'package:isms/models/admin_models/users_summary_data.dart';
import 'package:isms/models/charts/bar_charts/custom_bar_chart_data.dart';
import 'package:isms/models/charts/box_and_whisker_charts/custom_scores_variation_data.dart';
import 'package:isms/models/charts/line_charts/custom_line_chart_data_point.dart';
import 'package:isms/models/user_progress/user_course_progress.dart';
import 'package:isms/models/user_progress/user_exam_attempt.dart';
import 'package:isms/models/user_progress/user_exam_progress.dart';
import 'package:isms/views/widgets/shared_widgets/charts/horizontal_bar_chart_widget.dart';

List<HorizontalBarChartData> usersData = [
  HorizontalBarChartData(x: 'Aidan Pope', y: 81.8),
  HorizontalBarChartData(x: 'Saptarshi Mazumder', y: 89.8),
  HorizontalBarChartData(x: 'Alex Martin', y: 90.8),
  HorizontalBarChartData(x: 'Isabella Johnson', y: 78.9),
  HorizontalBarChartData(x: 'Mohamed Farah', y: 55.3),
  HorizontalBarChartData(x: 'Liu Wei', y: 45.2),
  HorizontalBarChartData(x: 'Olivia Smith', y: 66.8),
  HorizontalBarChartData(x: 'Sophia Liu', y: 83.5),
  HorizontalBarChartData(x: 'Emily Davis', y: 88.9),
  HorizontalBarChartData(x: 'Amelia Brown', y: 91.2),
  HorizontalBarChartData(x: 'Jack Taylor', y: 64.8),
  HorizontalBarChartData(x: 'Charlotte Lee', y: 79.4),
  HorizontalBarChartData(x: 'Noah Wilson', y: 86.2),
  HorizontalBarChartData(x: 'Ava Thompson', y: 72.9),
  HorizontalBarChartData(x: 'Oliver Anderson', y: 68.7),
  HorizontalBarChartData(x: 'Mia Clark', y: 74.3),
  HorizontalBarChartData(x: 'Liam Harris', y: 82.1),
  HorizontalBarChartData(x: 'Zoe Robinson', y: 75.6),
  HorizontalBarChartData(x: 'Ethan Hall', y: 90.1),
  HorizontalBarChartData(x: 'Harper Scott', y: 85.7),
  HorizontalBarChartData(x: 'James Wright', y: 60.9),
  HorizontalBarChartData(x: 'Chloe Green', y: 69.5),
  HorizontalBarChartData(x: 'Lucas Walker', y: 76.4),
  HorizontalBarChartData(x: 'Emma Adams', y: 81.9),
  HorizontalBarChartData(x: 'Mason Nelson', y: 55.0),
  HorizontalBarChartData(x: 'Ella Hill', y: 47.3),
  HorizontalBarChartData(x: 'Logan Baker', y: 88.2),
  HorizontalBarChartData(x: 'Lily Carter', y: 92.8),
  HorizontalBarChartData(x: 'Aiden Mitchell', y: 53.6),
  HorizontalBarChartData(x: 'Grace Perez', y: 77.4),
  HorizontalBarChartData(x: 'Benjamin Roberts', y: 62.1),
  HorizontalBarChartData(x: 'Nora Martinez', y: 59.8),
  HorizontalBarChartData(x: 'Sebastian Rivera', y: 66.5),
  HorizontalBarChartData(x: 'Hannah Lee', y: 71.2),
  HorizontalBarChartData(x: 'Gabriel Lewis', y: 87.9),
  HorizontalBarChartData(x: 'Abigail Young', y: 93.0),
  HorizontalBarChartData(x: 'Elijah King', y: 54.1),
  HorizontalBarChartData(x: 'Zoey Turner', y: 45.9),
  HorizontalBarChartData(x: 'Henry Sanchez', y: 78.6),
  HorizontalBarChartData(x: 'Charlotte Morris', y: 85.3),
  HorizontalBarChartData(x: 'Samuel Rogers', y: 89.7),
  HorizontalBarChartData(x: 'Sophie Brooks', y: 90.5),
  HorizontalBarChartData(x: 'Joseph Reed', y: 67.4),
  HorizontalBarChartData(x: 'Layla Murphy', y: 73.2),
  HorizontalBarChartData(x: 'Anthony Cook', y: 82.0),
  HorizontalBarChartData(x: 'Julia Bailey', y: 59.3),
  HorizontalBarChartData(x: 'Jaxon Rivera', y: 80.4),
  HorizontalBarChartData(x: 'Samantha Bell', y: 68.9),
  HorizontalBarChartData(x: 'Isaac Gomez', y: 76.7),
  HorizontalBarChartData(x: 'Madison Powell', y: 52.4),
];
List<HorizontalBarChartData> usersData2 = [
  HorizontalBarChartData(x: 'Aidan Pope', y: 75.1),
  HorizontalBarChartData(x: 'Saptarshi Mazumder', y: 82.6),
  HorizontalBarChartData(x: 'Alex Martin', y: 88.3),
  HorizontalBarChartData(x: 'Isabella Johnson', y: 65.4),
  HorizontalBarChartData(x: 'Mohamed Farah', y: 58.7),
  HorizontalBarChartData(x: 'Liu Wei', y: 49.5),
  HorizontalBarChartData(x: 'Olivia Smith', y: 70.2),
  HorizontalBarChartData(x: 'Sophia Liu', y: 78.9),
  HorizontalBarChartData(x: 'Emily Davis', y: 85.0),
  HorizontalBarChartData(x: 'Amelia Brown', y: 90.5),
  HorizontalBarChartData(x: 'Jack Taylor', y: 60.3),
  HorizontalBarChartData(x: 'Charlotte Lee', y: 74.1),
  HorizontalBarChartData(x: 'Noah Wilson', y: 81.7),
  HorizontalBarChartData(x: 'Ava Thompson', y: 69.8),
  HorizontalBarChartData(x: 'Oliver Anderson', y: 64.9),
  HorizontalBarChartData(x: 'Mia Clark', y: 72.5),
  HorizontalBarChartData(x: 'Liam Harris', y: 79.3),
  HorizontalBarChartData(x: 'Zoe Robinson', y: 71.4),
  HorizontalBarChartData(x: 'Ethan Hall', y: 85.6),
  HorizontalBarChartData(x: 'Harper Scott', y: 80.2),
  HorizontalBarChartData(x: 'James Wright', y: 58.9),
  HorizontalBarChartData(x: 'Chloe Green', y: 67.3),
  HorizontalBarChartData(x: 'Lucas Walker', y: 73.6),
  HorizontalBarChartData(x: 'Emma Adams', y: 79.9),
  HorizontalBarChartData(x: 'Mason Nelson', y: 53.0),
  HorizontalBarChartData(x: 'Ella Hill', y: 44.8),
  HorizontalBarChartData(x: 'Logan Baker', y: 83.7),
  HorizontalBarChartData(x: 'Lily Carter', y: 91.6),
  HorizontalBarChartData(x: 'Aiden Mitchell', y: 50.7),
  HorizontalBarChartData(x: 'Grace Perez', y: 74.9),
  HorizontalBarChartData(x: 'Benjamin Roberts', y: 61.2),
  HorizontalBarChartData(x: 'Nora Martinez', y: 57.9),
  HorizontalBarChartData(x: 'Sebastian Rivera', y: 64.8),
  HorizontalBarChartData(x: 'Hannah Lee', y: 69.1),
  HorizontalBarChartData(x: 'Gabriel Lewis', y: 84.7),
  HorizontalBarChartData(x: 'Abigail Young', y: 92.3),
  HorizontalBarChartData(x: 'Elijah King', y: 51.0),
  HorizontalBarChartData(x: 'Zoey Turner', y: 48.2),
  HorizontalBarChartData(x: 'Henry Sanchez', y: 75.6),
  HorizontalBarChartData(x: 'Charlotte Morris', y: 82.4),
  HorizontalBarChartData(x: 'Samuel Rogers', y: 87.3),
  HorizontalBarChartData(x: 'Sophie Brooks', y: 89.0),
  HorizontalBarChartData(x: 'Joseph Reed', y: 65.7),
  HorizontalBarChartData(x: 'Layla Murphy', y: 70.4),
  HorizontalBarChartData(x: 'Anthony Cook', y: 79.0),
  HorizontalBarChartData(x: 'Julia Bailey', y: 56.4),
  HorizontalBarChartData(x: 'Jaxon Rivera', y: 77.1),
  HorizontalBarChartData(x: 'Samantha Bell', y: 66.2),
  HorizontalBarChartData(x: 'Isaac Gomez', y: 72.9),
  HorizontalBarChartData(x: 'Madison Powell', y: 49.6),
];

List<CustomBarChartData> usersData23 = [
  CustomBarChartData(x: 'Aidan Pope', y: 100),
  CustomBarChartData(x: 'Alex Martin', y: 78),
  CustomBarChartData(x: 'Sara Watkins', y: 88),
  CustomBarChartData(x: 'James Smith', y: 95),
  CustomBarChartData(x: 'Jennifer Brown', y: 80),
  CustomBarChartData(x: 'John Davis', y: 72),
  CustomBarChartData(x: 'Patricia Wilson', y: 85),
  CustomBarChartData(x: 'Michael Miller', y: 92),
  CustomBarChartData(x: 'Linda Taylor', y: 69),
  CustomBarChartData(x: 'Robert Anderson', y: 76),
  CustomBarChartData(x: 'Charles Thomas', y: 83),
  CustomBarChartData(x: 'Mary Jackson', y: 91),
  CustomBarChartData(x: 'Susan White', y: 87),
  CustomBarChartData(x: 'Joseph Harris', y: 82),
  CustomBarChartData(x: 'Margaret Clark', y: 94),
  CustomBarChartData(x: 'Thomas Lewis', y: 77),
  CustomBarChartData(x: 'Christopher Allen', y: 89),
  CustomBarChartData(x: 'Daniel Young', y: 81),
  CustomBarChartData(x: 'Matthew King', y: 21),
  CustomBarChartData(x: 'Donald Scott', y: 90),
  CustomBarChartData(x: 'Linda Robinson', y: 86),
  CustomBarChartData(x: 'George Walker', y: 84),
  CustomBarChartData(x: 'Barbara Hall', y: 79),
  CustomBarChartData(x: 'Nancy Adams', y: 74),
  CustomBarChartData(x: 'Paul Baker', y: 93),
  CustomBarChartData(x: 'Steven Hill', y: 75),
  CustomBarChartData(x: 'Kevin Campbell', y: 68),
  CustomBarChartData(x: 'Laura Mitchell', y: 46),
  CustomBarChartData(x: 'Joshua Perez', y: 67),
  CustomBarChartData(x: 'Andrew Roberts', y: 97),
  CustomBarChartData(x: 'Brian Turner', y: 98),
  CustomBarChartData(x: 'Rebecca Phillips', y: 99),
  CustomBarChartData(x: 'Gary Ward', y: 100),
  CustomBarChartData(x: 'Jacob Moore', y: 65),
  CustomBarChartData(x: 'Shirley Murphy', y: 44),
  CustomBarChartData(x: 'Raymond Price', y: 63),
  CustomBarChartData(x: 'Cynthia Kelly', y: 62),
  CustomBarChartData(x: 'Charles Bennett', y: 61),
  CustomBarChartData(x: 'Angela Rivera', y: 60),
  CustomBarChartData(x: 'Brandon Richards', y: 59),
  CustomBarChartData(x: 'Gregory Jenkins', y: 58),
  CustomBarChartData(x: 'Anna Stewart', y: 57),
  CustomBarChartData(x: 'Willie Duncan', y: 56),
  CustomBarChartData(x: 'Ruth Lane', y: 55),
  CustomBarChartData(x: 'Walter Foster', y: 54),
  CustomBarChartData(x: 'Samantha Howard', y: 53),
  CustomBarChartData(x: 'Jerry Owens', y: 52),
  CustomBarChartData(x: 'Marie Russell', y: 51),
  CustomBarChartData(x: 'Eugene Freeman', y: 50),
  CustomBarChartData(x: 'Dorothy Hunter', y: 90)
];
List<CustomBarChartData> usersData24 = [
  CustomBarChartData(x: 'Aidan Pope', y: 75),
  CustomBarChartData(x: 'Alex Martin', y: 82),
  CustomBarChartData(x: 'Sara Watkins', y: 79),
  CustomBarChartData(x: 'James Smith', y: 88),
  CustomBarChartData(x: 'Jennifer Brown', y: 91),
  CustomBarChartData(x: 'John Davis', y: 65),
  CustomBarChartData(x: 'Patricia Wilson', y: 87),
  CustomBarChartData(x: 'Michael Miller', y: 93),
  CustomBarChartData(x: 'Linda Taylor', y: 70),
  CustomBarChartData(x: 'Robert Anderson', y: 80),
  CustomBarChartData(x: 'Charles Thomas', y: 85),
  CustomBarChartData(x: 'Mary Jackson', y: 95),
  CustomBarChartData(x: 'Susan White', y: 92),
  CustomBarChartData(x: 'Joseph Harris', y: 84),
  CustomBarChartData(x: 'Margaret Clark', y: 96),
  CustomBarChartData(x: 'Thomas Lewis', y: 78),
  CustomBarChartData(x: 'Christopher Allen', y: 90),
  CustomBarChartData(x: 'Daniel Young', y: 83),
  CustomBarChartData(x: 'Matthew King', y: 25),
  CustomBarChartData(x: 'Donald Scott', y: 89),
  CustomBarChartData(x: 'Linda Robinson', y: 88),
  CustomBarChartData(x: 'George Walker', y: 86),
  CustomBarChartData(x: 'Barbara Hall', y: 81),
  CustomBarChartData(x: 'Nancy Adams', y: 77),
  CustomBarChartData(x: 'Paul Baker', y: 94),
  CustomBarChartData(x: 'Steven Hill', y: 76),
  CustomBarChartData(x: 'Kevin Campbell', y: 69),
  CustomBarChartData(x: 'Laura Mitchell', y: 49),
  CustomBarChartData(x: 'Joshua Perez', y: 68),
  CustomBarChartData(x: 'Andrew Roberts', y: 98),
  CustomBarChartData(x: 'Brian Turner', y: 99),
  CustomBarChartData(x: 'Rebecca Phillips', y: 100),
  CustomBarChartData(x: 'Gary Ward', y: 100),
  CustomBarChartData(x: 'Jacob Moore', y: 66),
  CustomBarChartData(x: 'Shirley Murphy', y: 47),
  CustomBarChartData(x: 'Raymond Price', y: 64),
  CustomBarChartData(x: 'Cynthia Kelly', y: 63),
  CustomBarChartData(x: 'Charles Bennett', y: 62),
  CustomBarChartData(x: 'Angela Rivera', y: 61),
  CustomBarChartData(x: 'Brandon Richards', y: 60),
  CustomBarChartData(x: 'Gregory Jenkins', y: 59),
  CustomBarChartData(x: 'Anna Stewart', y: 58),
  CustomBarChartData(x: 'Willie Duncan', y: 57),
  CustomBarChartData(x: 'Ruth Lane', y: 56),
  CustomBarChartData(x: 'Walter Foster', y: 55),
  CustomBarChartData(x: 'Samantha Howard', y: 54),
  CustomBarChartData(x: 'Jerry Owens', y: 53),
  CustomBarChartData(x: 'Marie Russell', y: 52),
  CustomBarChartData(x: 'Eugene Freeman', y: 51),
  CustomBarChartData(x: 'Dorothy Hunter', y: 89)
];

List<CustomBarChartData> usersDataMaxScores = [
  CustomBarChartData(x: 'Aidan Pope', y: 95),
  CustomBarChartData(x: 'Alex Martin', y: 97),
  CustomBarChartData(x: 'Sara Watkins', y: 99),
  CustomBarChartData(x: 'James Smith', y: 98),
  CustomBarChartData(x: 'Jennifer Brown', y: 96),
  CustomBarChartData(x: 'John Davis', y: 94),
  CustomBarChartData(x: 'Patricia Wilson', y: 93),
  CustomBarChartData(x: 'Michael Miller', y: 92),
  CustomBarChartData(x: 'Linda Taylor', y: 91),
  CustomBarChartData(x: 'Robert Anderson', y: 90),
  CustomBarChartData(x: 'Charles Thomas', y: 89),
  CustomBarChartData(x: 'Mary Jackson', y: 98),
  CustomBarChartData(x: 'Susan White', y: 97),
  CustomBarChartData(x: 'Joseph Harris', y: 96),
  CustomBarChartData(x: 'Margaret Clark', y: 95),
  CustomBarChartData(x: 'Thomas Lewis', y: 94),
  CustomBarChartData(x: 'Christopher Allen', y: 93),
  CustomBarChartData(x: 'Daniel Young', y: 92),
  CustomBarChartData(x: 'Matthew King', y: 91),
  CustomBarChartData(x: 'Donald Scott', y: 90),
  CustomBarChartData(x: 'Linda Robinson', y: 89),
  CustomBarChartData(x: 'George Walker', y: 88),
  CustomBarChartData(x: 'Barbara Hall', y: 87),
  CustomBarChartData(x: 'Nancy Adams', y: 86),
  CustomBarChartData(x: 'Paul Baker', y: 95),
  CustomBarChartData(x: 'Steven Hill', y: 94),
  CustomBarChartData(x: 'Kevin Campbell', y: 93),
  CustomBarChartData(x: 'Laura Mitchell', y: 92),
  CustomBarChartData(x: 'Joshua Perez', y: 91),
  CustomBarChartData(x: 'Andrew Roberts', y: 90),
  CustomBarChartData(x: 'Brian Turner', y: 99),
  CustomBarChartData(x: 'Rebecca Phillips', y: 98),
  CustomBarChartData(x: 'Gary Ward', y: 97),
  CustomBarChartData(x: 'Jacob Moore', y: 96),
  CustomBarChartData(x: 'Shirley Murphy', y: 95),
  CustomBarChartData(x: 'Raymond Price', y: 94),
  CustomBarChartData(x: 'Cynthia Kelly', y: 93),
  CustomBarChartData(x: 'Charles Bennett', y: 92),
  CustomBarChartData(x: 'Angela Rivera', y: 91),
  CustomBarChartData(x: 'Brandon Richards', y: 90),
  CustomBarChartData(x: 'Gregory Jenkins', y: 89),
  CustomBarChartData(x: 'Anna Stewart', y: 88),
  CustomBarChartData(x: 'Willie Duncan', y: 87),
  CustomBarChartData(x: 'Ruth Lane', y: 86),
  CustomBarChartData(x: 'Walter Foster', y: 85),
  CustomBarChartData(x: 'Samantha Howard', y: 84),
  CustomBarChartData(x: 'Jerry Owens', y: 83),
  CustomBarChartData(x: 'Marie Russell', y: 82),
  CustomBarChartData(x: 'Eugene Freeman', y: 81),
  CustomBarChartData(x: 'Dorothy Hunter', y: 98)
];

List<CustomBarChartData> usersDataMinScores = [
  CustomBarChartData(x: 'Aidan Pope', y: 65),
  CustomBarChartData(x: 'Alex Martin', y: 70),
  CustomBarChartData(x: 'Sara Watkins', y: 60),
  CustomBarChartData(x: 'James Smith', y: 62),
  CustomBarChartData(x: 'Jennifer Brown', y: 68),
  CustomBarChartData(x: 'John Davis', y: 64),
  CustomBarChartData(x: 'Patricia Wilson', y: 67),
  CustomBarChartData(x: 'Michael Miller', y: 71),
  CustomBarChartData(x: 'Linda Taylor', y: 63),
  CustomBarChartData(x: 'Robert Anderson', y: 45),
  CustomBarChartData(x: 'Charles Thomas', y: 66),
  CustomBarChartData(x: 'Mary Jackson', y: 69),
  CustomBarChartData(x: 'Susan White', y: 70),
  CustomBarChartData(x: 'Joseph Harris', y: 61),
  CustomBarChartData(x: 'Margaret Clark', y: 72),
  CustomBarChartData(x: 'Thomas Lewis', y: 64),
  CustomBarChartData(x: 'Christopher Allen', y: 38),
  CustomBarChartData(x: 'Daniel Young', y: 65),
  CustomBarChartData(x: 'Matthew King', y: 61),
  CustomBarChartData(x: 'Donald Scott', y: 63),
  CustomBarChartData(x: 'Linda Robinson', y: 44),
  CustomBarChartData(x: 'George Walker', y: 62),
  CustomBarChartData(x: 'Barbara Hall', y: 60),
  CustomBarChartData(x: 'Nancy Adams', y: 67),
  CustomBarChartData(x: 'Paul Baker', y: 69),
  CustomBarChartData(x: 'Steven Hill', y: 55),
  CustomBarChartData(x: 'Kevin Campbell', y: 40),
  CustomBarChartData(x: 'Laura Mitchell', y: 63),
  CustomBarChartData(x: 'Joshua Perez', y: 61),
  CustomBarChartData(x: 'Andrew Roberts', y: 62),
  CustomBarChartData(x: 'Brian Turner', y: 64),
  CustomBarChartData(x: 'Rebecca Phillips', y: 67),
  CustomBarChartData(x: 'Gary Ward', y: 68),
  CustomBarChartData(x: 'Jacob Moore', y: 65),
  CustomBarChartData(x: 'Shirley Murphy', y: 50),
  CustomBarChartData(x: 'Raymond Price', y: 41),
  CustomBarChartData(x: 'Cynthia Kelly', y: 62),
  CustomBarChartData(x: 'Charles Bennett', y: 63),
  CustomBarChartData(x: 'Angela Rivera', y: 64),
  CustomBarChartData(x: 'Brandon Richards', y: 65),
  CustomBarChartData(x: 'Gregory Jenkins', y: 66),
  CustomBarChartData(x: 'Anna Stewart', y: 57),
  CustomBarChartData(x: 'Willie Duncan', y: 58),
  CustomBarChartData(x: 'Ruth Lane', y: 69),
  CustomBarChartData(x: 'Walter Foster', y: 30),
  CustomBarChartData(x: 'Samantha Howard', y: 71),
  CustomBarChartData(x: 'Jerry Owens', y: 72),
  CustomBarChartData(x: 'Marie Russell', y: 33),
  CustomBarChartData(x: 'Eugene Freeman', y: 34),
  CustomBarChartData(x: 'Dorothy Hunter', y: 75),
];

// List<CustomBarChartData> usersDataAvgScores = [
//   CustomBarChartData(x: 'Aidan Pope', y: 82.5),
//   CustomBarChartData(x: 'Alex Martin', y: 80),
//   CustomBarChartData(x: 'Sara Watkins', y: 83.5),
//   CustomBarChartData(x: 'James Smith', y: 91.5),
//   CustomBarChartData(x: 'Jennifer Brown', y: 85.5),
//   CustomBarChartData(x: 'John Davis', y: 68.5),
//   CustomBarChartData(x: 'Patricia Wilson', y: 86),
//   CustomBarChartData(x: 'Michael Miller', y: 92.5),
//   CustomBarChartData(x: 'Linda Taylor', y: 69.5),
//   CustomBarChartData(x: 'Robert Anderson', y: 78),
//   CustomBarChartData(x: 'Charles Thomas', y: 84),
//   CustomBarChartData(x: 'Mary Jackson', y: 93),
//   CustomBarChartData(x: 'Susan White', y: 89.5),
//   CustomBarChartData(x: 'Joseph Harris', y: 83),
//   CustomBarChartData(x: 'Margaret Clark', y: 95),
//   CustomBarChartData(x: 'Thomas Lewis', y: 77.5),
//   CustomBarChartData(x: 'Christopher Allen', y: 89.5),
//   CustomBarChartData(x: 'Daniel Young', y: 82),
//   CustomBarChartData(x: 'Matthew King', y: 73),
//   CustomBarChartData(x: 'Donald Scott', y: 89.5),
//   CustomBarChartData(x: 'Linda Robinson', y: 87),
//   CustomBarChartData(x: 'George Walker', y: 85),
//   CustomBarChartData(x: 'Barbara Hall', y: 80),
//   CustomBarChartData(x: 'Nancy Adams', y: 75.5),
//   CustomBarChartData(x: 'Paul Baker', y: 93.5),
//   CustomBarChartData(x: 'Steven Hill', y: 75.5),
//   CustomBarChartData(x: 'Kevin Campbell', y: 68.5),
//   CustomBarChartData(x: 'Laura Mitchell', y: 74.5),
//   CustomBarChartData(x: 'Joshua Perez', y: 67.5),
//   CustomBarChartData(x: 'Andrew Roberts', y: 98.5),
//   CustomBarChartData(x: 'Brian Turner', y: 98.5),
//   CustomBarChartData(x: 'Rebecca Phillips', y: 99.5),
//   CustomBarChartData(x: 'Gary Ward', y: 100),
//   CustomBarChartData(x: 'Jacob Moore', y: 65.5),
//   CustomBarChartData(x: 'Shirley Murphy', y: 46.5),
//   CustomBarChartData(x: 'Raymond Price', y: 63.5),
//   CustomBarChartData(x: 'Cynthia Kelly', y: 62.5),
//   CustomBarChartData(x: 'Charles Bennett', y: 61.5),
//   CustomBarChartData(x: 'Angela Rivera', y: 60.5),
//   CustomBarChartData(x: 'Brandon Richards', y: 59.5),
//   CustomBarChartData(x: 'Gregory Jenkins', y: 58.5),
//   CustomBarChartData(x: 'Anna Stewart', y: 57.5),
//   CustomBarChartData(x: 'Willie Duncan', y: 56.5),
//   CustomBarChartData(x: 'Ruth Lane', y: 55.5),
//   CustomBarChartData(x: 'Walter Foster', y: 54.5),
//   CustomBarChartData(x: 'Samantha Howard', y: 53.5),
//   CustomBarChartData(x: 'Jerry Owens', y: 52.5),
//   CustomBarChartData(x: 'Marie Russell', y: 51.5),
//   CustomBarChartData(x: 'Eugene Freeman', y: 75.5),
//   CustomBarChartData(x: 'Dorothy Hunter', y: 89.5),
// ];

List<CustomScoresVariationData> usersData501 = [
  CustomScoresVariationData(x: 'Aidan Pope', y: [60, 81, 87, 90, 95]),
  CustomScoresVariationData(x: 'Alex Martin', y: [69, 71, 78, 87, 96, 100]),
  CustomScoresVariationData(x: 'Sara Watkins', y: [58, 82, 86, 90, 94, 97]),
  CustomScoresVariationData(x: 'James Smith', y: [50, 55, 65, 71, 93, 94]),
  CustomScoresVariationData(x: 'Jennifer Brown', y: [50, 75, 80, 85, 87, 98]),
  CustomScoresVariationData(x: 'John Davis', y: [54, 78, 79, 83, 90, 99]),
  CustomScoresVariationData(x: 'Patricia Wilson', y: [53, 60, 70, 85, 95, 100]),
  CustomScoresVariationData(x: 'Michael Miller', y: [61, 65, 70, 82, 89, 96]),
  CustomScoresVariationData(x: 'Linda Taylor', y: [55, 66, 72, 85, 91, 99]),
  CustomScoresVariationData(x: 'Robert Anderson', y: [57, 64, 76, 84, 88, 95]),
  CustomScoresVariationData(x: 'Charles Thomas', y: [59, 63, 78, 81, 93, 97]),
  CustomScoresVariationData(x: 'Mary Jackson', y: [52, 67, 73, 86, 92, 100]),
  CustomScoresVariationData(x: 'Susan White', y: [56, 70, 75, 80, 94, 98]),
  CustomScoresVariationData(x: 'Joseph Harris', y: [50, 65, 77, 83, 89, 96]),
  CustomScoresVariationData(x: 'Margaret Clark', y: [54, 68, 74, 79, 85, 93]),
  CustomScoresVariationData(x: 'Thomas Lewis', y: [51, 66, 71, 86, 90, 99]),
  CustomScoresVariationData(x: 'Christopher Allen', y: [53, 69, 76, 82, 88, 94]),
  CustomScoresVariationData(x: 'Daniel Young', y: [57, 62, 77, 84, 91, 95]),
  CustomScoresVariationData(x: 'Matthew King', y: [58, 64, 79, 87, 92, 100]),
  CustomScoresVariationData(x: 'Donald Scott', y: [59, 67, 73, 81, 86, 93]),
  CustomScoresVariationData(x: 'Laura Mitchell', y: [62, 75, 78, 82, 89, 97]),
  CustomScoresVariationData(x: 'Joshua Perez', y: [50, 73, 76, 80, 85, 92]),
  CustomScoresVariationData(x: 'Andrew Roberts', y: [60, 74, 79, 83, 91, 95]),
  CustomScoresVariationData(x: 'Brian Turner', y: [55, 68, 72, 85, 90, 96]),
  CustomScoresVariationData(x: 'Rebecca Phillips', y: [57, 70, 74, 88, 93, 99]),
  CustomScoresVariationData(x: 'Gary Ward', y: [59, 69, 77, 84, 89, 94]),
  CustomScoresVariationData(x: 'Jacob Moore', y: [53, 65, 71, 86, 92, 98]),
  CustomScoresVariationData(x: 'Shirley Murphy', y: [50, 72, 76, 80, 87, 93]),
  CustomScoresVariationData(x: 'Raymond Price', y: [58, 64, 78, 81, 85, 91]),
  CustomScoresVariationData(x: 'Cynthia Kelly', y: [51, 67, 73, 79, 84, 90]),
  CustomScoresVariationData(x: 'Charles Bennett', y: [55, 63, 70, 75, 82, 88]),
  CustomScoresVariationData(x: 'Angela Rivera', y: [52, 66, 72, 86, 91, 97]),
  CustomScoresVariationData(x: 'Brandon Richards', y: [54, 69, 75, 80, 86, 92]),
  CustomScoresVariationData(x: 'Gregory Jenkins', y: [60, 71, 77, 83, 88, 94]),
  CustomScoresVariationData(x: 'Anna Stewart', y: [57, 68, 73, 78, 85, 91]),
  CustomScoresVariationData(x: 'Willie Duncan', y: [59, 64, 69, 74, 81, 87]),
  CustomScoresVariationData(x: 'Ruth Lane', y: [50, 65, 70, 76, 83, 89]),
  CustomScoresVariationData(x: 'Walter Foster', y: [58, 63, 68, 73, 80, 86]),
  CustomScoresVariationData(x: 'Samantha Howard', y: [56, 61, 66, 71, 78, 84]),
  CustomScoresVariationData(x: 'Jerry Owens', y: [54, 59, 64, 69, 76, 82]),
  CustomScoresVariationData(x: 'Gregory Jenkins', y: [42, 45, 50, 55, 60, 65]),
  CustomScoresVariationData(x: 'Anna Stewart', y: [41, 44, 49, 54, 59, 64]),
  CustomScoresVariationData(x: 'Willie Duncan', y: [40, 43, 48, 53, 58, 63]),
  CustomScoresVariationData(x: 'Ruth Lane', y: [39, 42, 47, 52, 57, 62]),
  CustomScoresVariationData(x: 'Walter Foster', y: [38, 41, 46, 51, 56, 61]),
  CustomScoresVariationData(x: 'Samantha Howard', y: [37, 40, 45, 50, 55, 60]),
  CustomScoresVariationData(x: 'Jerry Owens', y: [36, 39, 44, 49, 54, 59]),
  CustomScoresVariationData(x: 'Marie Russell', y: [35, 38, 43, 48, 53, 58]),
  CustomScoresVariationData(x: 'Eugene Freeman', y: [34, 37, 42, 47, 52, 57]),
];
List<CustomScoresVariationData> usersData502 = [
  CustomScoresVariationData(x: 'Emily Carter', y: [62, 77, 81, 85, 90, 95]),
  CustomScoresVariationData(x: 'Olivia Harris', y: [65, 70, 75, 80, 88, 92]),
  CustomScoresVariationData(x: 'Sophia Clark', y: [60, 65, 70, 76, 82, 89]),
  CustomScoresVariationData(x: 'Ava Wright', y: [58, 63, 68, 74, 79, 85]),
  CustomScoresVariationData(x: 'Isabella Johnson', y: [61, 66, 71, 77, 83, 90]),
  CustomScoresVariationData(x: 'Mia King', y: [64, 69, 73, 78, 84, 89]),
  CustomScoresVariationData(x: 'Amelia Brown', y: [67, 72, 76, 81, 86, 92]),
  CustomScoresVariationData(x: 'Harper Martinez', y: [70, 74, 79, 83, 88, 93]),
  CustomScoresVariationData(x: 'Evelyn Davis', y: [56, 61, 66, 71, 76, 82]),
  CustomScoresVariationData(x: 'Abigail Wilson', y: [59, 64, 68, 73, 78, 84]),
  CustomScoresVariationData(x: 'Ella Anderson', y: [57, 62, 67, 72, 77, 83]),
  CustomScoresVariationData(x: 'Scarlett Thomas', y: [55, 60, 65, 70, 75, 80]),
  CustomScoresVariationData(x: 'Grace Jackson', y: [53, 58, 63, 68, 74, 79]),
  CustomScoresVariationData(x: 'Chloe White', y: [51, 57, 62, 67, 73, 78]),
  CustomScoresVariationData(x: 'Isabelle Harris', y: [54, 59, 64, 69, 74, 80]),
  CustomScoresVariationData(x: 'Sophie Lewis', y: [52, 57, 62, 68, 73, 79]),
  CustomScoresVariationData(x: 'Charlotte Walker', y: [50, 55, 61, 66, 71, 77]),
  CustomScoresVariationData(x: 'Mila Robinson', y: [48, 54, 59, 64, 70, 75]),
  CustomScoresVariationData(x: 'Lucy Hall', y: [46, 52, 57, 63, 68, 74]),
  CustomScoresVariationData(x: 'Lily Young', y: [49, 54, 60, 65, 71, 76]),
  // Add more entries as needed
];

List<CustomLineChartDataPoint> coursesCompletedOverTimeData = [
  CustomLineChartDataPoint(x: 1, y: 3),
  CustomLineChartDataPoint(x: 2, y: 5),
  CustomLineChartDataPoint(x: 3, y: 6),
  CustomLineChartDataPoint(x: 4, y: 2),
  CustomLineChartDataPoint(x: 5, y: 24),
  CustomLineChartDataPoint(x: 6, y: 12),
  CustomLineChartDataPoint(x: 7, y: 43),
  CustomLineChartDataPoint(x: 8, y: 34),
  CustomLineChartDataPoint(x: 9, y: 20),
  CustomLineChartDataPoint(x: 10, y: 3),
  CustomLineChartDataPoint(x: 11, y: 7),
  CustomLineChartDataPoint(x: 12, y: 4),
  // Add more data points as necessary
];
List<CustomLineChartDataPoint> coursesEnrolledOverTimeData = [
  CustomLineChartDataPoint(x: 1, y: 4),
  CustomLineChartDataPoint(x: 2, y: 6),
  CustomLineChartDataPoint(x: 3, y: 7),
  CustomLineChartDataPoint(x: 4, y: 6),
  CustomLineChartDataPoint(x: 5, y: 34),
  CustomLineChartDataPoint(x: 6, y: 30),
  CustomLineChartDataPoint(x: 7, y: 45),
  CustomLineChartDataPoint(x: 8, y: 29),
  CustomLineChartDataPoint(x: 9, y: 40),
  CustomLineChartDataPoint(x: 10, y: 10),
  CustomLineChartDataPoint(x: 11, y: 10),
  CustomLineChartDataPoint(x: 12, y: 5),
  // Add more data points as necessary
];
List<CustomLineChartDataPoint> activeUsersData = [
  CustomLineChartDataPoint(x: 1, y: 5),
  CustomLineChartDataPoint(x: 2, y: 12),
  CustomLineChartDataPoint(x: 3, y: 7),
  CustomLineChartDataPoint(x: 4, y: 3),
  CustomLineChartDataPoint(x: 5, y: 36),
  CustomLineChartDataPoint(x: 6, y: 20),
  CustomLineChartDataPoint(x: 7, y: 50),
  CustomLineChartDataPoint(x: 8, y: 44),
  CustomLineChartDataPoint(x: 9, y: 26),
  CustomLineChartDataPoint(x: 10, y: 5),
  CustomLineChartDataPoint(x: 11, y: 8),
  CustomLineChartDataPoint(x: 12, y: 4),
  // Add more data points as necessary
];

List<UsersSummaryData> usersListData = [
  UsersSummaryData(
    name: 'Saptarshi Mazumder',
    emailId: 's.mazumder@pvp.co.jp',
    role: 'admin',
    coursesCompletedPercentage: 56.6,
    coursesAssigned: 7,
    averageScore: 86.9,
    examsTaken: 3,
    lastLogin: '7 Jan 2024 10:34:09',
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
  ),
  UsersSummaryData(
    name: 'Aidan Pope',
    emailId: 'aidan.pope@pvp.co.jp',
    role: 'admin',
    coursesCompletedPercentage: 60.1,
    coursesAssigned: 5,
    averageScore: 88.3,
    examsTaken: 5,
    lastLogin: '6 Jan 2024 14:20:17',
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Alex Martin',
    emailId: 'alex.martin@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 38.7,
    coursesAssigned: 6,
    averageScore: 59.4,
    examsTaken: 4,
    lastLogin: '5 Jan 2024 16:45:56',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Sahitha Yalamanchili',
    emailId: 's.yalamanchili@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 47.9,
    coursesAssigned: 8,
    averageScore: 68.2,
    examsTaken: 6,
    lastLogin: '8 Jan 2024 09:12:34',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'John Doe',
    emailId: 'john.doe@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 50.3,
    coursesAssigned: 9,
    averageScore: 70.5,
    examsTaken: 7,
    lastLogin: '4 Jan 2024 11:30:45',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Jane Smith',
    emailId: 'jane.smith@pvp.co.jp',
    role: 'admin',
    coursesCompletedPercentage: 33.5,
    coursesAssigned: 4,
    averageScore: 55.0,
    examsTaken: 2,
    lastLogin: '3 Jan 2024 13:40:25',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Michael Brown',
    emailId: 'michael.brown@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 40.2,
    coursesAssigned: 7,
    averageScore: 75.1,
    examsTaken: 5,
    lastLogin: '2 Jan 2024 15:55:10',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Emily Clark',
    emailId: 'emily.clark@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 45.8,
    coursesAssigned: 7,
    averageScore: 60.6,
    examsTaken: 4,
    lastLogin: '1 Jan 2024 17:05:55',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Daniel Wilson',
    emailId: 'daniel.wilson@pvp.co.jp',
    role: 'user',
    coursesCompletedPercentage: 39.4,
    coursesAssigned: 5,
    averageScore: 58.3,
    examsTaken: 3,
    lastLogin: '9 Jan 2024 12:15:30',
  ),
  UsersSummaryData(
    uid: 'gZZg3iv6e2YsoMXlMrXIVgf6Ycl2',
    name: 'Sophia Johnson',
    emailId: 'sophia.johnson@pvp.co.jp',
    role: 'admin',
    coursesCompletedPercentage: 88.7,
    coursesAssigned: 8,
    averageScore: 89.7,
    examsTaken: 4,
    lastLogin: '10 Jan 2024 14:25:47',
  ),
];

// List<CustomBarChartData> userDataAllCoursesAverage = [
//   CustomBarChartData(x: 'Introduction to Python', y: 77.5),
//   CustomBarChartData(x: 'Introduction to GCP', y: 78),
//   CustomBarChartData(x: 'Fundamentals of AWS', y: 77),
//   CustomBarChartData(x: 'Fundamentals of Game Design', y: 67.5),
//   CustomBarChartData(x: 'Fundamentals of Computer Science', y: 87.5),
//   CustomBarChartData(x: 'Introduction to ReactJS', y: 70.5),
//   CustomBarChartData(x: 'Advanced Machine Learning and AI', y: 55.5),
//   CustomBarChartData(x: 'Data Analysis - Power BI', y: 66),
// ];

// List<CustomBarChartData> userDataAllCoursesMaximum = [
//   CustomBarChartData(x: 'Introduction to Python', y: 82.5),
//   CustomBarChartData(x: 'Introduction to GCP', y: 80),
//   CustomBarChartData(x: 'Fundamentals of AWS', y: 80),
//   CustomBarChartData(x: 'Fundamentals of Game Design', y: 83.5),
//   CustomBarChartData(x: 'Fundamentals of Computer Science', y: 91.5),
//   CustomBarChartData(x: 'Introduction to ReactJS', y: 85.5),
//   CustomBarChartData(x: 'Advanced Machine Learning and AI', y: 68.5),
//   CustomBarChartData(x: 'Data Analysis - Power BI', y: 86),
// ];
//
// List<CustomBarChartData> userDataAllCoursesMinimum = [
//   CustomBarChartData(x: 'Introduction to Python', y: 56.5),
//   CustomBarChartData(x: 'Introduction to GCP', y: 67),
//   CustomBarChartData(x: 'Fundamentals of AWS', y: 56),
//   CustomBarChartData(x: 'Fundamentals of Game Design', y: 67.5),
//   CustomBarChartData(x: 'Fundamentals of Computer Science', y: 76.5),
//   CustomBarChartData(x: 'Introduction to ReactJS', y: 60.5),
//   CustomBarChartData(x: 'Advanced Machine Learning and AI', y: 45.5),
//   CustomBarChartData(x: 'Data Analysis - Power BI', y: 66),
// ];

List<CustomLineChartDataPoint> sampleUserExamsCompletedOverTimeData = [
  CustomLineChartDataPoint(x: 1, y: 1),
  CustomLineChartDataPoint(x: 2, y: 2),
  CustomLineChartDataPoint(x: 3, y: 0),
  CustomLineChartDataPoint(x: 4, y: 0),
  CustomLineChartDataPoint(x: 5, y: 4),
  CustomLineChartDataPoint(x: 6, y: 6),
  CustomLineChartDataPoint(x: 7, y: 3),
  CustomLineChartDataPoint(x: 8, y: 0),
  CustomLineChartDataPoint(x: 9, y: 1),
  CustomLineChartDataPoint(x: 10, y: 2),
  CustomLineChartDataPoint(x: 11, y: 0),
  CustomLineChartDataPoint(x: 12, y: 1),
  // Add more data points as necessary
];
List<CustomLineChartDataPoint> sampleUserCoursesEnrolledOverTimeData = [
  CustomLineChartDataPoint(x: 1, y: 2),
  CustomLineChartDataPoint(x: 2, y: 0),
  CustomLineChartDataPoint(x: 3, y: 0),
  CustomLineChartDataPoint(x: 4, y: 3),
  CustomLineChartDataPoint(x: 5, y: 5),
  CustomLineChartDataPoint(x: 6, y: 3),
  CustomLineChartDataPoint(x: 7, y: 0),
  CustomLineChartDataPoint(x: 8, y: 0),
  CustomLineChartDataPoint(x: 9, y: 1),
  CustomLineChartDataPoint(x: 10, y: 2),
  CustomLineChartDataPoint(x: 11, y: 3),
  CustomLineChartDataPoint(x: 12, y: 2),
  // Add more data points as necessary
];
List<CustomLineChartDataPoint> sampleUserActivity = [
  CustomLineChartDataPoint(x: 1, y: 5),
  CustomLineChartDataPoint(x: 2, y: 12),
  CustomLineChartDataPoint(x: 3, y: 7),
  CustomLineChartDataPoint(x: 4, y: 3),
  CustomLineChartDataPoint(x: 5, y: 36),
  CustomLineChartDataPoint(x: 6, y: 20),
  CustomLineChartDataPoint(x: 7, y: 50),
  CustomLineChartDataPoint(x: 8, y: 44),
  CustomLineChartDataPoint(x: 9, y: 26),
  CustomLineChartDataPoint(x: 10, y: 5),
  CustomLineChartDataPoint(x: 11, y: 8),
  CustomLineChartDataPoint(x: 12, y: 4),
  // Add more data points as necessary
];
List<CustomLineChartDataPoint> sampleUserTimeSpentStudying = [
  CustomLineChartDataPoint(x: 1, y: 5),
  CustomLineChartDataPoint(x: 2, y: 11),
  CustomLineChartDataPoint(x: 3, y: 5),
  CustomLineChartDataPoint(x: 4, y: 2),
  CustomLineChartDataPoint(x: 5, y: 30),
  CustomLineChartDataPoint(x: 6, y: 10),
  CustomLineChartDataPoint(x: 7, y: 20),
  CustomLineChartDataPoint(x: 8, y: 30),
  CustomLineChartDataPoint(x: 9, y: 16),
  CustomLineChartDataPoint(x: 10, y: 3),
  CustomLineChartDataPoint(x: 11, y: 7),
  CustomLineChartDataPoint(x: 12, y: 3),
  // Add more data points as necessary
];

List<CustomLineChartDataPoint> sampleUserTimeSpentOnExams = [
  CustomLineChartDataPoint(x: 1, y: 3),
  CustomLineChartDataPoint(x: 2, y: 7),
  CustomLineChartDataPoint(x: 3, y: 2),
  CustomLineChartDataPoint(x: 4, y: 0),
  CustomLineChartDataPoint(x: 5, y: 11),
  CustomLineChartDataPoint(x: 6, y: 5),
  CustomLineChartDataPoint(x: 7, y: 16),
  CustomLineChartDataPoint(x: 8, y: 10),
  CustomLineChartDataPoint(x: 9, y: 6),
  CustomLineChartDataPoint(x: 10, y: 1),
  CustomLineChartDataPoint(x: 11, y: 3),
  CustomLineChartDataPoint(x: 12, y: 0),
  // Add more data points as necessary
];

// List<UserSummary> userSummaryData = [
//   UserSummary(summaryTitle: 'Total Courses Enrolled', value: 5, type: ValueType.number.name),
//   UserSummary(summaryTitle: 'Total Exams Taken', value: 2, type: ValueType.number.name),
//   UserSummary(summaryTitle: 'Average Score', value: 45.67, type: ValueType.number.name),
//   UserSummary(summaryTitle: 'Completed', value: 0.65, type: ValueType.percentage.name),
// ];

List<UserCourseProgress> userCourseDetailsList = [
  UserCourseProgress(
    courseId: 'ip78hd',
    userId: 'gzza',
    courseTitle: 'Intro to Python and Machine Learning',
    courseLearningCompleted: false,
    completedSections: ['sec1', 'sec2', 'sec3'],
    completedExams: [
      'exm1',
      'exm2',
    ],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4', 'sec5', 'sec6', 'sec7', 'sec8', 'sec9'],
    examsInCourse: ['exm1', 'exm2', 'exm3'],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm1',
        examTitle: 'Intro to Python Assessment',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt001',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm1',
            startTime: DateTime(2023, 1, 10, 9, 30),
            endTime: DateTime(2023, 1, 10, 10, 15),
            result: ExamAttemptResult.pass,
            score: 85,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
          UserExamAttempt(
            attemptId: 'attempt002',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm1',
            startTime: DateTime(2023, 1, 12, 11, 30),
            endTime: DateTime(2023, 1, 12, 12, 15),
            result: ExamAttemptResult.fail,
            score: 35,
            responses: {},
            status: ExamAttemptStatus.aborted,
          ),
          UserExamAttempt(
            attemptId: 'attempt003',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm1',
            startTime: DateTime(2023, 4, 12, 11, 33),
            endTime: DateTime(2023, 4, 12, 13, 17),
            result: ExamAttemptResult.fail,
            score: 67,
            responses: {},
            status: ExamAttemptStatus.aborted,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm2',
        examTitle: 'Data Preprocessing',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt003',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm2',
            startTime: DateTime(2023, 1, 15, 14, 30),
            endTime: DateTime(2023, 1, 15, 15, 20),
            result: ExamAttemptResult.pass,
            score: 92,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
          UserExamAttempt(
            attemptId: 'attempt004',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm2',
            startTime: DateTime(2023, 1, 17, 9, 30),
            endTime: DateTime(2023, 1, 17, 10, 05),
            result: ExamAttemptResult.fail,
            score: 60,
            responses: {},
            status: ExamAttemptStatus.not_completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm3',
        examTitle: 'Machine Learning Models',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt005',
            userId: 'gzza',
            courseId: 'ip78hd',
            examId: 'exm3',
            startTime: DateTime(2023, 1, 20, 10, 30),
            endTime: DateTime(2023, 1, 20, 11, 15),
            result: ExamAttemptResult.fail,
            score: 45,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.not_completed,
      ),
    ],
  ),

  UserCourseProgress(
    courseId: 'cs50x',
    userId: 'gzza',
    courseTitle: 'Computer Science Basics',
    courseLearningCompleted: true,
    completedSections: ['sec1', 'sec2', 'sec3', 'sec4', 'sec5', 'sec6', 'sec7', 'sec8'],
    completedExams: [
      'exm1',
    ],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4', 'sec5', 'sec6', 'sec7', 'sec8'],
    examsInCourse: [
      'exm1',
    ],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'cs50x',
        examId: 'exm1',
        examTitle: 'Intro to CS Assessment',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt006',
            userId: 'gzza',
            courseId: 'cs50x',
            examId: 'exm1',
            startTime: DateTime(2023, 2, 5, 15, 00),
            endTime: DateTime(2023, 2, 5, 16, 00),
            result: ExamAttemptResult.pass,
            score: 95,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      // Add more UserExamProgress instances for other exams
    ],
  ),

  // Second course
  UserCourseProgress(
    courseId: 'js101',
    userId: 'gzza',
    courseTitle: 'JavaScript for Beginners',
    courseLearningCompleted: false,
    completedSections: ['sec1', 'sec2'],
    completedExams: ['exm1'],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4'],
    examsInCourse: ['exm1', 'exm2'],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'js101',
        examId: 'exm1',
        examTitle: 'Basics of JavaScript',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt101',
            userId: 'gzza',
            courseId: 'js101',
            examId: 'exm1',
            startTime: DateTime(2023, 2, 10, 9, 0),
            endTime: DateTime(2023, 2, 10, 10, 0),
            result: ExamAttemptResult.pass,
            score: 80,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
          UserExamAttempt(
            attemptId: 'attempt102',
            userId: 'gzza',
            courseId: 'js101',
            examId: 'exm1',
            startTime: DateTime(2023, 2, 15, 10, 30),
            endTime: DateTime(2023, 2, 15, 11, 30),
            result: ExamAttemptResult.fail,
            score: 60,
            responses: {},
            status: ExamAttemptStatus.aborted,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'js101',
        examId: 'exm2',
        examTitle: 'JavaScript Functions and Arrays',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt103',
            userId: 'gzza',
            courseId: 'js101',
            examId: 'exm2',
            startTime: DateTime(2023, 2, 20, 11, 0),
            endTime: DateTime(2023, 2, 20, 12, 0),
            result: ExamAttemptResult.fail,
            score: 65,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.not_completed,
      ),
    ],
  ),

// Third course
  UserCourseProgress(
    courseId: 'htmlcss',
    userId: 'gzza',
    courseTitle: 'Introduction to HTML and CSS',
    courseLearningCompleted: true,
    completedSections: ['sec1', 'sec2', 'sec3', 'sec4'],
    completedExams: ['exm1', 'exm2'],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4', 'sec5'],
    examsInCourse: ['exm1', 'exm2'],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'htmlcss',
        examId: 'exm1',
        examTitle: 'HTML Fundamentals',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt201',
            userId: 'gzza',
            courseId: 'htmlcss',
            examId: 'exm1',
            startTime: DateTime(2023, 3, 1, 9, 0),
            endTime: DateTime(2023, 3, 1, 10, 0),
            result: ExamAttemptResult.pass,
            score: 90,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'htmlcss',
        examId: 'exm2',
        examTitle: 'CSS Styling Techniques',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt202',
            userId: 'gzza',
            courseId: 'htmlcss',
            examId: 'exm2',
            startTime: DateTime(2023, 3, 5, 11, 0),
            endTime: DateTime(2023, 3, 5, 12, 30),
            result: ExamAttemptResult.pass,
            score: 88,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
    ],
  ),

// Fourth course
  UserCourseProgress(
    courseId: 'dataSci101',
    userId: 'gzza',
    courseTitle: 'Data Science Fundamentals',
    courseLearningCompleted: false,
    completedSections: ['sec1', 'sec2'],
    completedExams: [],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4'],
    examsInCourse: ['exm1', 'exm2', 'exm3'],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'dataSci101',
        examId: 'exm1',
        examTitle: 'Statistics and Probability',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt301',
            userId: 'gzza',
            courseId: 'dataSci101',
            examId: 'exm1',
            startTime: DateTime(2023, 3, 10, 14, 0),
            endTime: DateTime(2023, 3, 10, 15, 0),
            result: ExamAttemptResult.pass,
            score: 70,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'dataSci101',
        examId: 'exm2',
        examTitle: 'Data Visualization',
        examAttempts: [],
        examStatus: ExamStatus.not_completed,
      ),
      UserExamProgress(
        userId: 'gzza',
        courseId: 'dataSci101',
        examId: 'exm3',
        examTitle: 'Machine Learning Basics',
        examAttempts: [],
        examStatus: ExamStatus.not_completed,
      ),
    ],
  ),

// Fifth course
  UserCourseProgress(
    courseId: 'webDevAdv',
    userId: 'gzza',
    courseTitle: 'Advanced Web Development',
    courseLearningCompleted: false,
    completedSections: ['sec1'],
    completedExams: [],
    sectionsInCourse: ['sec1', 'sec2', 'sec3', 'sec4', 'sec5'],
    examsInCourse: ['exm1', 'exm2', 'exm3', 'exm4'],
    examsProgressList: [
      UserExamProgress(
        userId: 'gzza',
        courseId: 'webDevAdv',
        examId: 'exm1',
        examTitle: 'Responsive Design',
        examAttempts: [
          UserExamAttempt(
            attemptId: 'attempt401',
            userId: 'gzza',
            courseId: 'webDevAdv',
            examId: 'exm1',
            startTime: DateTime(2023, 4, 15, 10, 0),
            endTime: DateTime(2023, 4, 15, 11, 0),
            result: ExamAttemptResult.pass,
            score: 75,
            responses: {},
            status: ExamAttemptStatus.completed,
          ),
        ],
        examStatus: ExamStatus.completed,
      ),
      // Add more UserExamProgress instances for other exams
    ],
  ),
];

// Continue adding other UserCourseProgress objects

List<UserExamProgress> examsProgressList1 = [
  UserExamProgress(
    courseId: 'ip78hd',
    examId: 'exm1',
    examTitle: 'Intro to Python Assessment',
    examAttempts: [
      UserExamAttempt(
        attemptId: 'attempt001',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm1',
        startTime: DateTime(2023, 1, 10, 9, 30),
        endTime: DateTime(2023, 1, 10, 10, 15),
        result: ExamAttemptResult.pass,
        score: 85,
        responses: {},
        status: ExamAttemptStatus.completed,
      ),
      UserExamAttempt(
        attemptId: 'attempt002',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm1',
        startTime: DateTime(2023, 1, 12, 11, 30),
        endTime: DateTime(2023, 1, 12, 12, 15),
        result: ExamAttemptResult.fail,
        score: 35,
        responses: {},
        status: ExamAttemptStatus.aborted,
      ),
      UserExamAttempt(
        attemptId: 'attempt003',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm1',
        startTime: DateTime(2023, 4, 12, 11, 33),
        endTime: DateTime(2023, 4, 12, 13, 17),
        result: ExamAttemptResult.fail,
        score: 67,
        responses: {},
        status: ExamAttemptStatus.aborted,
      ),
    ],
    examStatus: ExamStatus.completed,
    userId: 'gzza',
  ),
  UserExamProgress(
    userId: 'gzza',
    courseId: 'ip78hd',
    examId: 'exm2',
    examTitle: 'Data Preprocessing',
    examAttempts: [
      UserExamAttempt(
        attemptId: 'attempt003',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm2',
        startTime: DateTime(2023, 1, 15, 14, 30),
        endTime: DateTime(2023, 1, 15, 15, 20),
        result: ExamAttemptResult.pass,
        score: 92,
        responses: {},
        status: ExamAttemptStatus.completed,
      ),
      UserExamAttempt(
        attemptId: 'attempt004',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm2',
        startTime: DateTime(2023, 1, 17, 9, 30),
        endTime: DateTime(2023, 1, 17, 10, 05),
        result: ExamAttemptResult.fail,
        score: 60,
        responses: {},
        status: ExamAttemptStatus.not_completed,
      ),
    ],
    examStatus: ExamStatus.completed,
  ),
  UserExamProgress(
    userId: 'gzza',
    courseId: 'ip78hd',
    examId: 'exm3',
    examTitle: 'Machine Learning Models',
    examAttempts: [
      UserExamAttempt(
        attemptId: 'attempt005',
        userId: 'gzza',
        courseId: 'ip78hd',
        examId: 'exm3',
        startTime: DateTime(2023, 1, 20, 10, 30),
        endTime: DateTime(2023, 1, 20, 11, 15),
        result: ExamAttemptResult.fail,
        score: 45,
        responses: {},
        status: ExamAttemptStatus.completed,
      ),
    ],
    examStatus: ExamStatus.not_completed,
  ),
];
